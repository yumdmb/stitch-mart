{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam arbain\\\\OneDrive - Universiti Malaya\\\\Desktop\\\\backUp\\\\degree\\\\sem 4\\\\wif2003 web prog\\\\Group Project  Web Prog\\\\stitch-mart\\\\src\\\\components\\\\Financial\\\\FinancialReports.jsx\",\n  _s = $RefreshSig$();\nimport './Financial.css';\nimport React, { useState } from 'react';\n\n// Component for generating financial reports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FinancialReports() {\n  _s();\n  const [revenue, setRevenue] = useState(1230);\n\n  // Function to generate profit and loss statement\n  const generateProfitLossStatement = () => {\n    // Logic to calculate profit and loss\n  };\n\n  // Function to generate cash flow summary\n  const generateCashFlowSummary = () => {\n    // Logic to generate cash flow summary\n  };\n\n  // Array of month names\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  // Get the current date\n  const currentDate = new Date();\n\n  // Get the previous month\n  const prevMonth = currentDate.getMonth() - 1;\n  const currentYear = currentDate.getFullYear();\n  if (prevMonth === -1) {\n    // If the current month is January, set the previous month to December\n    prevMonth = 11;\n    currentYear--;\n  }\n  const prevMonthName = monthNames[prevMonth];\n\n  // Function to show the financial performance message\n  const showFinancialPerformance = () => {\n    // Sample revenue and expense values\n    const servicesRevenue = 1080;\n    const operatingExpenses = 250;\n    const sumMonth = prevMonthName;\n    const sumYear = currentYear;\n\n    // Calculate total revenues and expenses\n    const totalRevenues = servicesRevenue;\n    const totalExpenses = operatingExpenses;\n    const netIncome = totalRevenues - totalExpenses;\n    const alertMessage = `Cash Flow Summary (${sumMonth} ${sumYear}):\\nRevenues:\\n    Services to customers: $${servicesRevenue}\\nTotal Revenues: $${totalRevenues}\\n\\nExpenses:\\n    Operating Expenses: $${operatingExpenses}\\nTotal Expenses: $${totalExpenses}\\n\\nNet Income: $${netIncome}`;\n    alert(alertMessage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-reports\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [prevMonthName, \" \", currentYear, \" Report\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showFinancialPerformance,\n      children: \"Show Financial Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(FinancialReports, \"+t2vR4wKhJVmNugK6WYq5kFTLQk=\");\n_c = FinancialReports;\nexport default FinancialReports;\nvar _c;\n$RefreshReg$(_c, \"FinancialReports\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FinancialReports","_s","revenue","setRevenue","generateProfitLossStatement","generateCashFlowSummary","monthNames","currentDate","Date","prevMonth","getMonth","currentYear","getFullYear","prevMonthName","showFinancialPerformance","servicesRevenue","operatingExpenses","sumMonth","sumYear","totalRevenues","totalExpenses","netIncome","alertMessage","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adam arbain/OneDrive - Universiti Malaya/Desktop/backUp/degree/sem 4/wif2003 web prog/Group Project  Web Prog/stitch-mart/src/components/Financial/FinancialReports.jsx"],"sourcesContent":["import './Financial.css';\r\nimport React, { useState } from 'react';\r\n\r\n// Component for generating financial reports\r\nfunction FinancialReports() {\r\n\r\n  const [revenue, setRevenue] = useState(1230);\r\n\r\n  // Function to generate profit and loss statement\r\n  const generateProfitLossStatement = () => {\r\n    // Logic to calculate profit and loss\r\n  };\r\n\r\n  // Function to generate cash flow summary\r\n  const generateCashFlowSummary = () => {\r\n    // Logic to generate cash flow summary\r\n  };\r\n\r\n  // Array of month names\r\n  const monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  // Get the current date\r\n  const currentDate = new Date();\r\n\r\n  // Get the previous month\r\n  const prevMonth = currentDate.getMonth() - 1;\r\n  const currentYear = currentDate.getFullYear();\r\n\r\n  if (prevMonth === -1) {\r\n    // If the current month is January, set the previous month to December\r\n    prevMonth = 11;\r\n    currentYear--;\r\n  }\r\n\r\n  const prevMonthName = monthNames[prevMonth];\r\n\r\n  // Function to show the financial performance message\r\n  const showFinancialPerformance = () => {\r\n    // Sample revenue and expense values\r\n    const servicesRevenue = 1080;\r\n    const operatingExpenses = 250;\r\n    const sumMonth = prevMonthName;\r\n    const sumYear = currentYear;\r\n  \r\n    // Calculate total revenues and expenses\r\n    const totalRevenues = servicesRevenue;\r\n    const totalExpenses = operatingExpenses;\r\n    const netIncome = totalRevenues - totalExpenses;\r\n  \r\n    const alertMessage = `Cash Flow Summary (${sumMonth} ${sumYear}):\\nRevenues:\\n    Services to customers: $${servicesRevenue}\\nTotal Revenues: $${totalRevenues}\\n\\nExpenses:\\n    Operating Expenses: $${operatingExpenses}\\nTotal Expenses: $${totalExpenses}\\n\\nNet Income: $${netIncome}`;\r\n    alert(alertMessage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"financial-reports\">\r\n      <div className=\"header-container\">\r\n        <h2>{prevMonthName} {currentYear} Report</h2>\r\n      </div>\r\n      <button onClick={showFinancialPerformance}>Show Financial Performance</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinancialReports;"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAE1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMO,2BAA2B,GAAGA,CAAA,KAAM;IACxC;EAAA,CACD;;EAED;EACA,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC;EAAA,CACD;;EAED;EACA,MAAMC,UAAU,GAAG,CACjB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;;EAED;EACA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAE9B;EACA,MAAMC,SAAS,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC;EAC5C,MAAMC,WAAW,GAAGJ,WAAW,CAACK,WAAW,CAAC,CAAC;EAE7C,IAAIH,SAAS,KAAK,CAAC,CAAC,EAAE;IACpB;IACAA,SAAS,GAAG,EAAE;IACdE,WAAW,EAAE;EACf;EAEA,MAAME,aAAa,GAAGP,UAAU,CAACG,SAAS,CAAC;;EAE3C;EACA,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACA,MAAMC,eAAe,GAAG,IAAI;IAC5B,MAAMC,iBAAiB,GAAG,GAAG;IAC7B,MAAMC,QAAQ,GAAGJ,aAAa;IAC9B,MAAMK,OAAO,GAAGP,WAAW;;IAE3B;IACA,MAAMQ,aAAa,GAAGJ,eAAe;IACrC,MAAMK,aAAa,GAAGJ,iBAAiB;IACvC,MAAMK,SAAS,GAAGF,aAAa,GAAGC,aAAa;IAE/C,MAAME,YAAY,GAAI,sBAAqBL,QAAS,IAAGC,OAAQ,8CAA6CH,eAAgB,sBAAqBI,aAAc,2CAA0CH,iBAAkB,sBAAqBI,aAAc,oBAAmBC,SAAU,EAAC;IAC5RE,KAAK,CAACD,YAAY,CAAC;EACrB,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC1B,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B1B,OAAA;QAAA0B,QAAA,GAAKZ,aAAa,EAAC,GAAC,EAACF,WAAW,EAAC,SAAO;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACN9B,OAAA;MAAQ+B,OAAO,EAAEhB,wBAAyB;MAAAW,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV;AAAC5B,EAAA,CA5DQD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AA8DzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}